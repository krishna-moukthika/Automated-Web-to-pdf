# -*- coding: utf-8 -*-
"""Automated-web-to-pdf

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1N3BZu1CB4v5-ENSHDSDyE6I6sG1j4Kqa
"""

import pandas as pd
import gspread
from gspread_dataframe import get_as_dataframe
import webbrowser

!apt-get update
!apt-get install -y chromium-chromedriver
!pip install selenium

# Set environment paths
import sys
sys.path.insert(0, '/usr/lib/chromium-browser/chromedriver')

from google.colab import auth
auth.authenticate_user()

from google.auth import default
creds, _ = default()
gc = gspread.authorize(creds)

sheet_url = 'https://docs.google.com/spreadsheets/d/1vvaiI9fFWg8Kwj66SYTjiSCAxkNP8bXSWbYxKmas13w/edit?usp=drive_link'
sheet = gc.open_by_url(sheet_url)

worksheet = sheet.sheet1

# Load the sheet into a pandas DataFrame
df = get_as_dataframe(worksheet).dropna(subset=["URL"])
df.head()

# 1. Remove any broken versions
!apt-get purge -y chromium-browser chromium-chromedriver
!apt-get autoremove -y
!rm -rf /usr/lib/chromium /usr/lib/chromium-browser /usr/lib/chromium-browser/chromedriver

# 2. Install a specific version of Chromium
!wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
!dpkg -i google-chrome-stable_current_amd64.deb || apt-get -fy install

# Install latest compatible Chromedriver (auto-detects Chrome version)
!CHROME_VERSION=$(google-chrome --version | grep -oP '\d+' | head -1) && \
  echo "Detected Chrome version: $CHROME_VERSION" && \
  wget -O /tmp/chromedriver.zip "https://storage.googleapis.com/chrome-for-testing-public/$CHROME_VERSION.0.7049.84/linux64/chromedriver-linux64.zip" && \
  unzip -o /tmp/chromedriver.zip -d /usr/local/bin/ && \
  mv /usr/local/bin/chromedriver-linux64/chromedriver /usr/local/bin/chromedriver && \
  chmod +x /usr/local/bin/chromedriver

# 4. Confirm versions
!google-chrome --version
!chromedriver --version

from selenium import webdriver
from selenium.webdriver.chrome.service import Service
from selenium.webdriver.chrome.options import Options
import base64
import time
import os

def setup_driver():
    chrome_options = Options()
    chrome_options.add_argument('--headless')
    chrome_options.add_argument('--no-sandbox')
    chrome_options.add_argument('--disable-dev-shm-usage')
    chrome_options.add_argument('--kiosk-printing')
    chrome_options.binary_location = '/usr/bin/google-chrome'

    service = Service('/usr/local/bin/chromedriver')
    return webdriver.Chrome(service=service, options=chrome_options)

def save_page_as_pdf(url, output_path):
    driver = setup_driver()
    driver.get(url)
    time.sleep(5)  # wait for content to load
    pdf = driver.execute_cdp_cmd("Page.printToPDF", {"printBackground": True})
    with open(output_path, "wb") as f:
        f.write(base64.b64decode(pdf['data']))
    driver.quit()

from datetime import datetime
from google.colab import drive
drive.mount('/content/drive')
save_folder = '/content/drive/MyDrive/WebPDFs'
os.makedirs(save_folder, exist_ok=True)

for i, row in df.iterrows():
    url = row['URL']
    filename = f"webpage_{i+1}.pdf"
    path = os.path.join(save_folder, filename)
    print(f"Saving PDF for: {url}")
    save_page_as_pdf(url, path)
# Record timestamp in ISO format (or customize)
    timestamp = datetime.utcnow().strftime('%Y-%m-%d %H:%M:%S')
    worksheet.update_cell(i + 2, 2, timestamp)  # Row i+2 (accounting for header), column 2 for timestamp

print("Saved to:", path, "Exists:", os.path.exists(path))